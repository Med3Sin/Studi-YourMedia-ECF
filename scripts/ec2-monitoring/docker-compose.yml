version: '3'

services:
  prometheus:
    image: medsin/yourmedia-ecf:prometheus-latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /opt/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/monitoring/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--storage.tsdb.retention.size=1GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    cpu_shares: 512

  grafana:
    image: medsin/yourmedia-ecf:grafana-latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - /opt/monitoring/grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-YourMedia2025!}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    cpu_shares: 512

  # Base de données PostgreSQL pour SonarQube
  sonarqube-db:
    image: postgres:13
    container_name: sonarqube-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${SONAR_JDBC_USERNAME:-sonar}
      - POSTGRES_PASSWORD=${SONAR_JDBC_PASSWORD:-$(openssl rand -base64 16)}
      - POSTGRES_DB=sonar
    volumes:
      - /opt/monitoring/sonarqube-data/db:/var/lib/postgresql/data
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m
    cpu_shares: 512

  # SonarQube pour l'analyse de code
  sonarqube:
    image: medsin/yourmedia-ecf:sonarqube-latest
    container_name: sonarqube
    depends_on:
      - sonarqube-db
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=${SONAR_JDBC_URL:-jdbc:postgresql://sonarqube-db:5432/sonar}
      - SONAR_JDBC_USERNAME=${SONAR_JDBC_USERNAME:-sonar}
      - SONAR_JDBC_PASSWORD=${SONAR_JDBC_PASSWORD:-sonar123}
      # Limiter la mémoire utilisée par Elasticsearch pour éviter les erreurs OOM
      - SONAR_ES_JAVA_OPTS=-Xms512m -Xmx512m
      # Limiter la mémoire globale de SonarQube
      - SONAR_WEB_JAVA_OPTS=-Xmx512m -Xms256m
      - SONAR_CE_JAVA_OPTS=-Xmx512m -Xms256m
    volumes:
      - /opt/monitoring/sonarqube-data/data:/opt/sonarqube/data
      - /opt/monitoring/sonarqube-data/logs:/opt/sonarqube/logs
      - /opt/monitoring/sonarqube-data/extensions:/opt/sonarqube/extensions
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Augmenter légèrement la limite de mémoire pour éviter les erreurs OOM
    mem_limit: 1536m
    cpu_shares: 1024
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  # Exportateur CloudWatch pour surveiller les services AWS (S3, RDS, EC2)
  cloudwatch-exporter:
    image: prom/cloudwatch-exporter:latest
    container_name: cloudwatch-exporter
    ports:
      - "9106:9106"
    volumes:
      - /opt/monitoring/cloudwatch-config/cloudwatch-config.yml:/config/cloudwatch-config.yml
    command: "--config.file=/config/cloudwatch-config.yml"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 256m
    cpu_shares: 256

  # Exportateur MySQL pour surveiller RDS
  mysql-exporter:
    image: prom/mysqld-exporter:v0.15.0
    container_name: mysql-exporter
    ports:
      - "9104:9104"
    environment:
      # Format correct pour la connexion MySQL: user:password@protocol(host:port)/
      - DATA_SOURCE_NAME=${RDS_USERNAME:-yourmedia}:${RDS_PASSWORD:-password}@tcp(${RDS_ENDPOINT:-localhost:3306})/
      # Configuration explicite pour éviter les erreurs de configuration
      - MYSQL_USER=${RDS_USERNAME:-yourmedia}
      - MYSQL_PASSWORD=${RDS_PASSWORD:-password}
      - MYSQL_HOST=${RDS_HOST:-localhost}
      - MYSQL_PORT=${RDS_PORT:-3306}
    # Créer un fichier de configuration .my.cnf pour mysqld_exporter
    command: >
      /bin/sh -c "
      echo \"[client]\" > /tmp/.my.cnf &&
      echo \"user=${RDS_USERNAME:-yourmedia}\" >> /tmp/.my.cnf &&
      echo \"password=${RDS_PASSWORD:-password}\" >> /tmp/.my.cnf &&
      echo \"host=${RDS_HOST:-localhost}\" >> /tmp/.my.cnf &&
      echo \"port=${RDS_PORT:-3306}\" >> /tmp/.my.cnf &&
      chmod 600 /tmp/.my.cnf &&
      /bin/mysqld_exporter --config.my-cnf=/tmp/.my.cnf
      "
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 256m
    cpu_shares: 256
