name: Upload Scripts to S3

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de déploiement'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pre-prod
          - prod

env:
  AWS_REGION: eu-west-3
  AWS_DEFAULT_REGION: eu-west-3

jobs:
  upload-scripts:
    name: Upload Scripts to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get S3 Bucket Name
        id: get-bucket
        run: |
          # Utiliser le secret TF_S3_BUCKET_NAME s'il existe
          if [ ! -z "${{ secrets.TF_S3_BUCKET_NAME }}" ]; then
            echo "S3_BUCKET=${{ secrets.TF_S3_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "Bucket S3 trouvé: ${{ secrets.TF_S3_BUCKET_NAME }}"
          else
            echo "ERREUR: Le secret TF_S3_BUCKET_NAME n'est pas défini"
            exit 1
          fi

      - name: Upload EC2 Monitoring Scripts
        run: |
          echo "::group::Upload des scripts EC2 Monitoring"
          # Vérifier que le répertoire des scripts existe
          if [ ! -d "scripts/ec2-monitoring" ]; then
            echo "ERREUR: Le répertoire scripts/ec2-monitoring n'existe pas"
            exit 1
          fi

          # Rendre les scripts exécutables
          chmod +x scripts/ec2-monitoring/*.sh

          # Téléverser les scripts vers S3
          aws s3 sync scripts/ec2-monitoring/ s3://${{ env.S3_BUCKET }}/scripts/ec2-monitoring/ --exclude "*.md" --include "*.sh" --include "*.yml" --include "*.json" --acl private
          echo "Scripts EC2 Monitoring téléversés avec succès"
          echo "::endgroup::"

      - name: Upload EC2 Java Tomcat Scripts
        run: |
          echo "::group::Upload des scripts EC2 Java Tomcat"
          # Vérifier que le répertoire des scripts existe
          if [ ! -d "scripts/ec2-java-tomcat" ]; then
            echo "ERREUR: Le répertoire scripts/ec2-java-tomcat n'existe pas"
            exit 1
          fi

          # Rendre les scripts exécutables
          chmod +x scripts/ec2-java-tomcat/*.sh

          # Téléverser les scripts vers S3
          aws s3 sync scripts/ec2-java-tomcat/ s3://${{ env.S3_BUCKET }}/scripts/ec2-java-tomcat/ --exclude "*.md" --include "*.sh" --include "*.yml" --include "*.json" --acl private
          echo "Scripts EC2 Java Tomcat téléversés avec succès"
          echo "::endgroup::"

      - name: Upload Docker Scripts
        run: |
          echo "::group::Upload des scripts Docker"
          # Vérifier que le répertoire des scripts existe
          if [ ! -d "scripts/docker" ]; then
            echo "ERREUR: Le répertoire scripts/docker n'existe pas"
            exit 1
          fi

          # Rendre les scripts exécutables
          chmod +x scripts/docker/*.sh

          # Téléverser les scripts vers S3
          aws s3 sync scripts/docker/ s3://${{ env.S3_BUCKET }}/scripts/docker/ --exclude "*.md" --include "*.sh" --include "*.yml" --include "*.json" --include "Dockerfile" --acl private
          echo "Scripts Docker téléversés avec succès"
          echo "::endgroup::"

      - name: List Uploaded Files
        run: |
          echo "::group::Liste des fichiers téléversés"
          echo "Scripts EC2 Monitoring:"
          aws s3 ls s3://${{ env.S3_BUCKET }}/scripts/ec2-monitoring/ --recursive
          echo "Scripts EC2 Java Tomcat:"
          aws s3 ls s3://${{ env.S3_BUCKET }}/scripts/ec2-java-tomcat/ --recursive
          echo "Scripts Docker:"
          aws s3 ls s3://${{ env.S3_BUCKET }}/scripts/docker/ --recursive
          echo "::endgroup::"

      - name: Summary
        run: |
          echo "## Résumé du téléversement des scripts" >> $GITHUB_STEP_SUMMARY
          echo "* **Environnement:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "* **Bucket S3:** ${{ env.S3_BUCKET }}" >> $GITHUB_STEP_SUMMARY
          echo "* **Scripts téléversés:**" >> $GITHUB_STEP_SUMMARY
          echo "  - Scripts EC2 Monitoring" >> $GITHUB_STEP_SUMMARY
          echo "  - Scripts EC2 Java Tomcat" >> $GITHUB_STEP_SUMMARY
          echo "  - Scripts Docker" >> $GITHUB_STEP_SUMMARY
          echo "* **Statut:** Succès ✅" >> $GITHUB_STEP_SUMMARY
