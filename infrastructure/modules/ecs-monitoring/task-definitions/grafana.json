[
  {
    "name": "${project_name}-grafana",
    "image": "grafana/grafana-oss:latest", # Utilise l'image officielle Grafana OSS
    "cpu": ${task_cpu},
    "memory": ${task_memory},
    "essential": true,
    "portMappings": [
      {
        "containerPort": 3000, # Port Grafana par défaut
        "hostPort": 3000,
        "protocol": "tcp"
      }
    ],
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${log_group_arn}",
        "awslogs-region": "${aws_region}",
        "awslogs-stream-prefix": "ecs-grafana"
      }
    },
    "environment": [
      # Variables d'environnement pour configurer Grafana
      # Voir https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/
      { "name": "GF_SECURITY_ADMIN_USER", "value": "admin" }, # Utilisateur admin par défaut
      { "name": "GF_SECURITY_ADMIN_PASSWORD", "value": "YourSecurePassword123!" }, # !! CHANGEZ CECI !! Idéalement via Secrets Manager
      { "name": "GF_SERVER_ROOT_URL", "value": "http://localhost:3000" }, # URL de base (sera l'IP publique de la tâche Fargate)
      { "name": "GF_INSTALL_PLUGINS", "value": "" } # Ajouter des plugins si nécessaire, ex: "grafana-clock-panel,grafana-simple-json-datasource"
      # Note: La configuration de la source de données Prometheus se fera manuellement dans l'UI Grafana pour la simplicité,
      # ou pourrait être provisionnée via des fichiers de config montés (plus complexe).
    ]
    # Note: Pas de montage de volume persistant pour la simplicité (tableaux de bord, etc. perdus si la tâche redémarre)
    # Pour la persistance, il faudrait utiliser EFS.
  }
]
